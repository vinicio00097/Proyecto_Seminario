// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using Proyecto_Seminario;

namespace Proyecto_Seminario.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20191006093120_update1")]
    partial class update1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("C##PROYECTO_SEMINARIO")
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.ISEQ$$_75348", "'ISEQ$$_75348', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ISEQ$$_75351", "'ISEQ$$_75351', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ISEQ$$_75354", "'ISEQ$$_75354', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ISEQ$$_75357", "'ISEQ$$_75357', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ISEQ$$_75360", "'ISEQ$$_75360', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ISEQ$$_75363", "'ISEQ$$_75363', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ISEQ$$_75366", "'ISEQ$$_75366', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ISEQ$$_75368", "'ISEQ$$_75368', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ISEQ$$_75371", "'ISEQ$$_75371', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ISEQ$$_75373", "'ISEQ$$_75373', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ISEQ$$_75375", "'ISEQ$$_75375', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ISEQ$$_75378", "'ISEQ$$_75378', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ISEQ$$_75379", "'ISEQ$$_75379', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ISEQ$$_76748", "'ISEQ$$_76748', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ISEQ$$_77306", "'ISEQ$$_77306', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ISEQ$$_77317", "'ISEQ$$_77317', '', '1', '1', '', '', 'Int64', 'False'");

            modelBuilder.Entity("Proyecto_Seminario.Acciones", b =>
                {
                    b.Property<decimal>("IdAccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ACCION")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasColumnType("VARCHAR2(30)");

                    b.HasKey("IdAccion")
                        .HasName("ACCIONES_PK");

                    b.HasIndex("IdAccion")
                        .IsUnique()
                        .HasName("ACCIONES_PK");

                    b.ToTable("ACCIONES");
                });

            modelBuilder.Entity("Proyecto_Seminario.Instanciasplantillas", b =>
                {
                    b.Property<decimal>("IdInstanciaPlantilla")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_INSTANCIA_PLANTILLA")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("DESCRIPCION")
                        .HasColumnType("VARCHAR2(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnName("ESTADO")
                        .HasColumnType("CHAR(1)");

                    b.Property<DateTime?>("FechaCreado");

                    b.Property<DateTime?>("FechaIniciado");

                    b.Property<string>("Iniciada")
                        .IsRequired()
                        .HasColumnName("INICIADA")
                        .HasColumnType("CHAR(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasColumnType("VARCHAR2(50)");

                    b.Property<decimal>("Usuario")
                        .HasColumnName("USUARIO")
                        .HasColumnType("NUMBER(38)");

                    b.HasKey("IdInstanciaPlantilla")
                        .HasName("INSTANCIASPLANTILLAS_PK");

                    b.HasIndex("IdInstanciaPlantilla")
                        .IsUnique()
                        .HasName("INSTANCIASPLANTILLAS_PK");

                    b.HasIndex("Usuario");

                    b.ToTable("INSTANCIASPLANTILLAS");
                });

            modelBuilder.Entity("Proyecto_Seminario.InstanciasplantillasDatosDetalle", b =>
                {
                    b.Property<decimal>("IdInstanciaPlantillaDato")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_INSTANCIA_PLANTILLA_DATO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<DateTime?>("DatoDate")
                        .HasColumnName("DATO_DATE")
                        .HasColumnType("DATE");

                    b.Property<decimal?>("DatoInteger")
                        .HasColumnName("DATO_INTEGER")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("DatoString")
                        .HasColumnName("DATO_STRING")
                        .HasColumnType("VARCHAR2(50)");

                    b.Property<decimal>("Instanciaplantilla")
                        .HasColumnName("INSTANCIAPLANTILLA")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("NombreCampo")
                        .IsRequired()
                        .HasColumnName("NOMBRE_CAMPO")
                        .HasColumnType("VARCHAR2(50)");

                    b.Property<decimal>("TipoDato")
                        .HasColumnName("TIPO_DATO")
                        .HasColumnType("NUMBER(38)");

                    b.HasKey("IdInstanciaPlantillaDato")
                        .HasName("INSTANCIASPLANTILLAS_DATOS_DETALLE_PK");

                    b.HasIndex("IdInstanciaPlantillaDato")
                        .IsUnique()
                        .HasName("INSTANCIASPLANTILLAS_DATOS_DETALLE_PK");

                    b.HasIndex("Instanciaplantilla");

                    b.HasIndex("TipoDato");

                    b.ToTable("INSTANCIASPLANTILLAS_DATOS_DETALLE");
                });

            modelBuilder.Entity("Proyecto_Seminario.InstanciasplantillasPasosDetalle", b =>
                {
                    b.Property<decimal>("IdPlantillaPasoDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PLANTILLA_PASO_DETALLE")
                        .HasColumnType("NUMBER(38)");

                    b.Property<decimal?>("Estado")
                        .HasColumnName("ESTADO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnName("FECHA_FIN")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnName("FECHA_INICIO")
                        .HasColumnType("DATE");

                    b.Property<decimal>("InstanciaPlantilla")
                        .HasColumnName("INSTANCIA_PLANTILLA")
                        .HasColumnType("NUMBER(38)");

                    b.Property<decimal>("Paso")
                        .HasColumnName("PASO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<decimal?>("UsuarioAccion")
                        .HasColumnName("USUARIO_ACCION")
                        .HasColumnType("NUMBER(38)");

                    b.HasKey("IdPlantillaPasoDetalle")
                        .HasName("INSTANCIASPLANTILLAS_PASOS_DETALLE_PK");

                    b.HasIndex("Estado");

                    b.HasIndex("IdPlantillaPasoDetalle")
                        .IsUnique()
                        .HasName("INSTANCIASPLANTILLAS_PASOS_DETALLE_PK");

                    b.HasIndex("InstanciaPlantilla");

                    b.HasIndex("Paso");

                    b.HasIndex("UsuarioAccion");

                    b.ToTable("INSTANCIASPLANTILLAS_PASOS_DETALLE");
                });

            modelBuilder.Entity("Proyecto_Seminario.Pasos", b =>
                {
                    b.Property<decimal>("IdPaso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PASO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("DESCRIPCION")
                        .HasColumnType("VARCHAR2(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasColumnType("VARCHAR2(50)");

                    b.HasKey("IdPaso")
                        .HasName("PASOS_PK");

                    b.HasIndex("IdPaso")
                        .IsUnique()
                        .HasName("PASOS_PK");

                    b.ToTable("PASOS");
                });

            modelBuilder.Entity("Proyecto_Seminario.PasosDatosDetalle", b =>
                {
                    b.Property<decimal>("IdPasoDato")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PASO_DATO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<decimal>("Paso")
                        .HasColumnName("PASO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<decimal>("PlantillaCampo")
                        .HasColumnName("PLANTILLA_CAMPO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("SoloLectura")
                        .IsRequired()
                        .HasColumnName("SOLO_LECTURA")
                        .HasColumnType("CHAR(1)");

                    b.HasKey("IdPasoDato")
                        .HasName("PASOS_DATOS_DETALLE_PK");

                    b.HasIndex("IdPasoDato")
                        .IsUnique()
                        .HasName("PASOS_DATOS_DETALLE_PK");

                    b.HasIndex("Paso");

                    b.HasIndex("PlantillaCampo");

                    b.ToTable("PASOS_DATOS_DETALLE");
                });

            modelBuilder.Entity("Proyecto_Seminario.PasosUsuariosDetalle", b =>
                {
                    b.Property<decimal>("IdPasoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PASO_USUARIO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<decimal>("PlantillaPasoDetalle")
                        .HasColumnName("PLANTILLA_PASO_DETALLE")
                        .HasColumnType("NUMBER(38)");

                    b.Property<decimal>("Usuario")
                        .HasColumnName("USUARIO")
                        .HasColumnType("NUMBER(38)");

                    b.HasKey("IdPasoUsuario")
                        .HasName("PLANTILLAS_PASOS_USUARIOS_DETALLE_PK2");

                    b.HasIndex("IdPasoUsuario")
                        .IsUnique()
                        .HasName("PASOS_USUARIOS_DETALLE_PK2");

                    b.HasIndex("PlantillaPasoDetalle");

                    b.HasIndex("Usuario");

                    b.ToTable("PASOS_USUARIOS_DETALLE");
                });

            modelBuilder.Entity("Proyecto_Seminario.Pasosinstancias", b =>
                {
                    b.Property<decimal>("IdPasoinstancia")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PASOINSTANCIA")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("DESCRIPCION")
                        .HasColumnType("VARCHAR2(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasColumnType("VARCHAR2(50)");

                    b.HasKey("IdPasoinstancia")
                        .HasName("PASOSINSTANCIAS_PK");

                    b.HasIndex("IdPasoinstancia")
                        .IsUnique()
                        .HasName("PASOSINSTANCIAS_PK");

                    b.ToTable("PASOSINSTANCIAS");
                });

            modelBuilder.Entity("Proyecto_Seminario.PasosinstanciasDatosDetalle", b =>
                {
                    b.Property<decimal>("IdPasosinstanciasDatos")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PASOSINSTANCIAS_DATOS")
                        .HasColumnType("NUMBER(38)");

                    b.Property<decimal>("InstanciaPlantillaDato")
                        .HasColumnName("INSTANCIA_PLANTILLA_DATO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<decimal>("Paso")
                        .HasColumnName("PASO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("SoloLectura")
                        .IsRequired()
                        .HasColumnName("SOLO_LECTURA")
                        .HasColumnType("CHAR(1)");

                    b.HasKey("IdPasosinstanciasDatos")
                        .HasName("PASOSINSTANCIAS_DATOS_DETALLE_PK");

                    b.HasIndex("IdPasosinstanciasDatos")
                        .IsUnique()
                        .HasName("PASOSINSTANCIAS_DATOS_DETALLE_PK");

                    b.HasIndex("InstanciaPlantillaDato");

                    b.HasIndex("Paso");

                    b.ToTable("PASOSINSTANCIAS_DATOS_DETALLE");
                });

            modelBuilder.Entity("Proyecto_Seminario.PasosinstanciasUsuariosDetalle", b =>
                {
                    b.Property<decimal>("IdPasosUsuarios")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PASOS_USUARIOS")
                        .HasColumnType("NUMBER(38)");

                    b.Property<decimal>("PlantillaPasoDetalle")
                        .HasColumnName("PLANTILLA_PASO_DETALLE")
                        .HasColumnType("NUMBER(38)");

                    b.Property<decimal>("Usuario")
                        .HasColumnName("USUARIO")
                        .HasColumnType("NUMBER(38)");

                    b.HasKey("IdPasosUsuarios")
                        .HasName("PASOS_USUARIOS_DETALLE_PK");

                    b.HasIndex("IdPasosUsuarios")
                        .IsUnique()
                        .HasName("PASOS_USUARIOS_DETALLE_PK");

                    b.HasIndex("PlantillaPasoDetalle");

                    b.HasIndex("Usuario");

                    b.ToTable("PASOSINSTANCIAS_USUARIOS_DETALLE");
                });

            modelBuilder.Entity("Proyecto_Seminario.Plantillas", b =>
                {
                    b.Property<decimal>("IdPlantilla")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PLANTILLA")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("DESCRIPCION")
                        .HasColumnType("VARCHAR2(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasColumnType("VARCHAR2(50)");

                    b.HasKey("IdPlantilla")
                        .HasName("PLANTILLAS_PK");

                    b.HasIndex("IdPlantilla")
                        .IsUnique()
                        .HasName("PLANTILLAS_PK");

                    b.ToTable("PLANTILLAS");
                });

            modelBuilder.Entity("Proyecto_Seminario.PlantillasCamposDetalle", b =>
                {
                    b.Property<decimal>("IdPlantillaCampo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PLANTILLA_CAMPO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("NombreCampo")
                        .IsRequired()
                        .HasColumnName("NOMBRE_CAMPO")
                        .HasColumnType("VARCHAR2(50)");

                    b.Property<decimal>("Plantilla")
                        .HasColumnName("PLANTILLA")
                        .HasColumnType("NUMBER(38)");

                    b.Property<decimal>("TipoDato")
                        .HasColumnName("TIPO_DATO")
                        .HasColumnType("NUMBER(38)");

                    b.HasKey("IdPlantillaCampo")
                        .HasName("PLANTILLAS_CAMPOS_DETALLE_PK");

                    b.HasIndex("IdPlantillaCampo")
                        .IsUnique()
                        .HasName("PLANTILLAS_CAMPOS_DETALLE_PK");

                    b.HasIndex("Plantilla");

                    b.HasIndex("TipoDato");

                    b.ToTable("PLANTILLAS_CAMPOS_DETALLE");
                });

            modelBuilder.Entity("Proyecto_Seminario.PlantillasPasosDetalle", b =>
                {
                    b.Property<decimal>("IdPlantillaPaso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PLANTILLA_PASO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<decimal>("Paso")
                        .HasColumnName("PASO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<decimal>("Plantilla")
                        .HasColumnName("PLANTILLA")
                        .HasColumnType("NUMBER(38)");

                    b.HasKey("IdPlantillaPaso")
                        .HasName("PLANTILLAS_PASOS_DETALLE_PK");

                    b.HasIndex("IdPlantillaPaso")
                        .IsUnique()
                        .HasName("PLANTILLAS_PASOS_DETALLE_PK");

                    b.HasIndex("Paso");

                    b.HasIndex("Plantilla");

                    b.ToTable("PLANTILLAS_PASOS_DETALLE");
                });

            modelBuilder.Entity("Proyecto_Seminario.Rangos", b =>
                {
                    b.Property<decimal>("IdRango")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_RANGO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<decimal>("Nivel")
                        .HasColumnName("NIVEL")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasColumnType("VARCHAR2(50)");

                    b.HasKey("IdRango")
                        .HasName("RANGOS_PK");

                    b.HasIndex("IdRango")
                        .IsUnique()
                        .HasName("RANGOS_PK");

                    b.ToTable("RANGOS");
                });

            modelBuilder.Entity("Proyecto_Seminario.TiposDatos", b =>
                {
                    b.Property<decimal>("IdTipoDato")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_TIPO_DATO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasColumnType("VARCHAR2(50)");

                    b.HasKey("IdTipoDato")
                        .HasName("TABLE1_PK");

                    b.HasIndex("IdTipoDato")
                        .IsUnique()
                        .HasName("TABLE1_PK");

                    b.ToTable("TIPOS_DATOS");
                });

            modelBuilder.Entity("Proyecto_Seminario.Usuarios", b =>
                {
                    b.Property<decimal>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_USUARIO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnName("APELLIDOS")
                        .HasColumnType("VARCHAR2(50)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnName("NOMBRES")
                        .HasColumnType("VARCHAR2(50)");

                    b.Property<decimal>("Rango")
                        .HasColumnName("RANGO")
                        .HasColumnType("NUMBER(38)");

                    b.Property<string>("UsuarioEmail")
                        .IsRequired()
                        .HasColumnName("USUARIO_EMAIL")
                        .HasColumnType("VARCHAR2(30)");

                    b.HasKey("IdUsuario")
                        .HasName("USUARIOS_PK");

                    b.HasIndex("IdUsuario")
                        .IsUnique()
                        .HasName("USUARIOS_PK");

                    b.HasIndex("Rango");

                    b.ToTable("USUARIOS");
                });

            modelBuilder.Entity("Proyecto_Seminario.Instanciasplantillas", b =>
                {
                    b.HasOne("Proyecto_Seminario.Usuarios", "UsuarioNavigation")
                        .WithMany("Instanciasplantillas")
                        .HasForeignKey("Usuario")
                        .HasConstraintName("INSTANCIASPLANTILLAS_FK1");
                });

            modelBuilder.Entity("Proyecto_Seminario.InstanciasplantillasDatosDetalle", b =>
                {
                    b.HasOne("Proyecto_Seminario.Instanciasplantillas", "InstanciaplantillaNavigation")
                        .WithMany("InstanciasplantillasDatosDetalle")
                        .HasForeignKey("Instanciaplantilla")
                        .HasConstraintName("INSTANCIASPLANTILLAS_DATOS_DETALLE_FK1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Proyecto_Seminario.TiposDatos", "TipoDatoNavigation")
                        .WithMany("InstanciasplantillasDatosDetalle")
                        .HasForeignKey("TipoDato")
                        .HasConstraintName("INSTANCIASPLANTILLAS_DATOS_DETALLE_FK2");
                });

            modelBuilder.Entity("Proyecto_Seminario.InstanciasplantillasPasosDetalle", b =>
                {
                    b.HasOne("Proyecto_Seminario.Acciones", "EstadoNavigation")
                        .WithMany("InstanciasplantillasPasosDetalle")
                        .HasForeignKey("Estado")
                        .HasConstraintName("INSTANCIASPLANTILLAS_PASOS_DETALLE_FK2");

                    b.HasOne("Proyecto_Seminario.Instanciasplantillas", "InstanciaPlantillaNavigation")
                        .WithMany("InstanciasplantillasPasosDetalle")
                        .HasForeignKey("InstanciaPlantilla")
                        .HasConstraintName("INSTANCIASPLANTILLAS_PASOS_DETALLE_FK3")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Proyecto_Seminario.Pasosinstancias", "PasoNavigation")
                        .WithMany("InstanciasplantillasPasosDetalle")
                        .HasForeignKey("Paso")
                        .HasConstraintName("INSTANCIASPLANTILLAS_PASOS_DETALLE_FK1");

                    b.HasOne("Proyecto_Seminario.Usuarios", "UsuarioAccionNavigation")
                        .WithMany("InstanciasplantillasPasosDetalle")
                        .HasForeignKey("UsuarioAccion")
                        .HasConstraintName("INSTANCIASPLANTILLAS_PASOS_DETALLE_FK4");
                });

            modelBuilder.Entity("Proyecto_Seminario.PasosDatosDetalle", b =>
                {
                    b.HasOne("Proyecto_Seminario.Pasos", "PasoNavigation")
                        .WithMany("PasosDatosDetalle")
                        .HasForeignKey("Paso")
                        .HasConstraintName("PASOS_DATOS_DETALLE_FK1");

                    b.HasOne("Proyecto_Seminario.PlantillasCamposDetalle", "PlantillaCampoNavigation")
                        .WithMany("PasosDatosDetalle")
                        .HasForeignKey("PlantillaCampo")
                        .HasConstraintName("PASOS_DATOS_DETALLE_FK2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Proyecto_Seminario.PasosUsuariosDetalle", b =>
                {
                    b.HasOne("Proyecto_Seminario.PlantillasPasosDetalle", "PlantillaPasoDetalleNavigation")
                        .WithMany("PasosUsuariosDetalle")
                        .HasForeignKey("PlantillaPasoDetalle")
                        .HasConstraintName("PLANTILLAS_PASOS_USUARIOS_DETALLE_FK1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Proyecto_Seminario.Usuarios", "UsuarioNavigation")
                        .WithMany("PasosUsuariosDetalle")
                        .HasForeignKey("Usuario")
                        .HasConstraintName("PLANTILLAS_PASOS_USUARIOS_DETALLE_FK2");
                });

            modelBuilder.Entity("Proyecto_Seminario.PasosinstanciasDatosDetalle", b =>
                {
                    b.HasOne("Proyecto_Seminario.InstanciasplantillasDatosDetalle", "InstanciaPlantillaDatoNavigation")
                        .WithMany("PasosinstanciasDatosDetalle")
                        .HasForeignKey("InstanciaPlantillaDato")
                        .HasConstraintName("PASOSINSTANCIAS_DATOS_DETALLE_FK1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Proyecto_Seminario.Pasosinstancias", "PasoNavigation")
                        .WithMany("PasosinstanciasDatosDetalle")
                        .HasForeignKey("Paso")
                        .HasConstraintName("PASOSINSTANCIAS_DATOS_DETALLE_FK2");
                });

            modelBuilder.Entity("Proyecto_Seminario.PasosinstanciasUsuariosDetalle", b =>
                {
                    b.HasOne("Proyecto_Seminario.InstanciasplantillasPasosDetalle", "PlantillaPasoDetalleNavigation")
                        .WithMany("PasosinstanciasUsuariosDetalle")
                        .HasForeignKey("PlantillaPasoDetalle")
                        .HasConstraintName("PASOS_USUARIOS_DETALLE_FK1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Proyecto_Seminario.Usuarios", "UsuarioNavigation")
                        .WithMany("PasosinstanciasUsuariosDetalle")
                        .HasForeignKey("Usuario")
                        .HasConstraintName("PASOS_USUARIOS_DETALLE_FK2");
                });

            modelBuilder.Entity("Proyecto_Seminario.PlantillasCamposDetalle", b =>
                {
                    b.HasOne("Proyecto_Seminario.Plantillas", "PlantillaNavigation")
                        .WithMany("PlantillasCamposDetalle")
                        .HasForeignKey("Plantilla")
                        .HasConstraintName("PLANTILLAS_CAMPOS_DETALLE_FK1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Proyecto_Seminario.TiposDatos", "TipoDatoNavigation")
                        .WithMany("PlantillasCamposDetalle")
                        .HasForeignKey("TipoDato")
                        .HasConstraintName("PLANTILLAS_CAMPOS_DETALLE_FK2");
                });

            modelBuilder.Entity("Proyecto_Seminario.PlantillasPasosDetalle", b =>
                {
                    b.HasOne("Proyecto_Seminario.Pasos", "PasoNavigation")
                        .WithMany("PlantillasPasosDetalle")
                        .HasForeignKey("Paso")
                        .HasConstraintName("PLANTILLAS_PASOS_DETALLE_FK2");

                    b.HasOne("Proyecto_Seminario.Plantillas", "PlantillaNavigation")
                        .WithMany("PlantillasPasosDetalle")
                        .HasForeignKey("Plantilla")
                        .HasConstraintName("PLANTILLAS_PASOS_DETALLE_FK1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Proyecto_Seminario.Usuarios", b =>
                {
                    b.HasOne("Proyecto_Seminario.Rangos", "RangoNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("Rango")
                        .HasConstraintName("USUARIOS_FK1");
                });
#pragma warning restore 612, 618
        }
    }
}
